name: CI

on:
  push:
  pull_request:
  release:
    types: [published]
  schedule:
    # Run at 02:00 UTC every Saturday
    # https://docs.github.com/en/actions/reference/events-that-trigger-workflows#scheduled-events
    - cron: "0 2 * * SAT"

jobs:
  build:
    runs-on: windows-2022

    strategy:
      fail-fast: false
      matrix:
        zip-name: ["vcpkg-dartsim-deps-v7.0"]
        deps: ["assimp ccd eigen3 fcl fmt spdlog bullet3 freeglut glfw3 nlopt ode opencl opengl osg pagmo2 pybind11 tinyxml2 urdfdom"]
        include:
          - zip-name: "vcpkg-dartsim-deps-v6.13"
            deps: "assimp ccd eigen3 fcl fmt spdlog bullet3 flann freeglut glfw3 nlopt ode opengl osg pagmo2 pybind11 tinyxml2 urdfdom"
          - zip-name: "vcpkg-dartsim-deps-min-v7.0"
            deps: "assimp ccd eigen3 fcl fmt spdlog"
          - zip-name: "vcpkg-dartsim-deps-cuda-v7.0"
            deps: "assimp ccd eigen3 fcl fmt spdlog bullet3 cuda freeglut glfw3 nlopt ode opencl opengl osg pagmo2 pybind11 tinyxml2 urdfdom"
          - zip-name: "vcpkg-dartsim-deps-v8.0"
            deps: "eigen3 fmt pkgconf assimp bullet3 ccd fcl glew imgui nlopt ode opencl opengl osg pybind11 spdlog tbb tinyxml2 urdfdom"
          - zip-name: "vcpkg-dartsim-deps-cuda-v8.0"
            deps: "eigen3 fmt pkgconf assimp bullet3 ccd cuda fcl glew imgui nlopt ode opencl opengl osg pybind11 spdlog tbb tinyxml2 urdfdom"

    env:
      VCPKG_ROOT: C:\dartsim\vcpkg
      VCPKG_VERSION: "021ba042f230ba730a4385ae4bbda55107b8288d"

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Install CUDA Toolkit conditionally
      - uses: Jimver/cuda-toolkit@v0.2.8
        if: contains(matrix.deps, 'cuda')
        id: cuda-toolkit
        with:
          cuda: '11.7.0'

      # Install vcpkg
      - name: Install vcpkg
        shell: cmd
        run: |
          git clone -q https://github.com/microsoft/vcpkg.git %VCPKG_ROOT%
          cd /d %VCPKG_ROOT%
          git checkout %VCPKG_VERSION%
          %VCPKG_ROOT%\bootstrap-vcpkg.bat

      # Install DART dependencies
      - name: Install vcpkg Packages
        env:
          VCPKG_PACKAGES: ${{ matrix.deps }}
        shell: cmd
        run: |
          %VCPKG_ROOT%\vcpkg.exe install --recurse --triplet x64-windows %VCPKG_PACKAGES%

      # Remove temporary files
      # https://github.com/Microsoft/vcpkg/blob/master/docs/about/faq.md#how-can-i-remove-temporary-files
      - name: Cleanup vcpkg Temporary Files
        shell: cmd
        run: |
          RMDIR /Q/S %VCPKG_ROOT%\buildtrees
          RMDIR /Q/S %VCPKG_ROOT%\packages
          RMDIR /Q/S %VCPKG_ROOT%\downloads

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.zip-name }}
          path: C:\dartsim\vcpkg

      - name: Prepare Release File
        if: github.event_name == 'release'
        shell: cmd
        run: |
          7z a ${{ matrix.zip-name }}.zip %VCPKG_ROOT%

      - name: Upload Release Asset
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./${{ matrix.zip-name }}.zip
          asset_name: ${{ matrix.zip-name }}.zip
          asset_content_type: application/zip
