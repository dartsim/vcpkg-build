name: CI

on:
  push:
  pull_request:
  release:
    types: [published]
  schedule:
    # Run every day at 02:00
    - cron: "0 2 * * 0-6"

jobs:
  build:
    runs-on: windows-latest

    strategy:
      fail-fast: false
      matrix:
        cuda-packages: [""]
        zip-name: ["vcpkg-dartsim-dependencies"]
        include:
          - cuda-packages: cuda
            zip-name: vcpkg-dartsim-dependencies-cuda

    env:
      VCPKG_ROOT: C:\dartsim\vcpkg
      VCPKG_VERSION: "2022.09.27"

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Install vcpkg
      - name: Install vcpkg
        shell: cmd
        run: |
          git clone -q https://github.com/microsoft/vcpkg.git %VCPKG_ROOT%
          cd /d %VCPKG_ROOT%
          git checkout %VCPKG_VERSION%
          %VCPKG_ROOT%\bootstrap-vcpkg.bat
          
      # Install DART dependencies
      - name: Install vcpkg Packages
        env:
          VCPKG_PACKAGES: "eigen3 fmt"
          VCPKG_OPTIONAL_PACKAGES: "assimp bullet3 ccd fcl glew imgui nlopt ode opencl opengl osg pybind11 spdlog tbb tinyxml2 urdfdom"
          VCPKG_OPTIONAL_PACKAGES_NOT_WORKING: "ipopt"
        shell: cmd
        run: |
          %VCPKG_ROOT%\vcpkg.exe install --recurse --triplet x64-windows %VCPKG_PACKAGES%
          %VCPKG_ROOT%\vcpkg.exe install --recurse --triplet x64-windows %VCPKG_OPTIONAL_PACKAGES% ${{ matrix.cuda-packages }}
          
      # Remove temporary files
      # https://github.com/Microsoft/vcpkg/blob/master/docs/about/faq.md#how-can-i-remove-temporary-files
      - name: Cleanup vcpkg Temporary Files
        shell: cmd
        run: |
          RMDIR /Q/S %VCPKG_ROOT%\buildtrees
          RMDIR /Q/S %VCPKG_ROOT%\packages
          RMDIR /Q/S %VCPKG_ROOT%\downloads
          
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.zip-name }}
          path: C:\dartsim\vcpkg

      - name: Prepare Release File
        if: github.event_name == 'release'
        shell: cmd
        run: |
          7z a ${{ matrix.zip-name }}.zip %VCPKG_ROOT%
          
      - name: Upload Release Asset
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./${{ matrix.zip-name }}.zip
          asset_name: ${{ matrix.zip-name }}.zip
          asset_content_type: application/zip
